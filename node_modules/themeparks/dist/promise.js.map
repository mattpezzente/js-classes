{"version":3,"sources":["../lib/promise.js"],"names":["Promise","require","onPossiblyUnhandledRejection","error","module","exports"],"mappings":"AAAA;;AAEA;;AAEA,IAAIA,UAAUC,QAAQ,UAAR,CAAd;;AAEA;AACA;AACA;AACAD,QAAQE,4BAAR,CAAqC,UAASC,KAAT,EAAe;AAChD,UAAMA,KAAN;AACH,CAFD;;AAIAC,OAAOC,OAAP,GAAiBL,OAAjB","file":"promise.js","sourcesContent":["\"use strict\";\n\n// make our own wrapper for Promise so we can configure bluebird exactly how we want it everywhere\n\nvar Promise = require(\"bluebird\");\n\n// handle errors from within Promises correctly!\n//  Promises by default just die if there is an error, which makes debugging the worst thing ever.\n//  who decided that was sane?\nPromise.onPossiblyUnhandledRejection(function(error){\n    throw error;\n});\n\nmodule.exports = Promise;"]}